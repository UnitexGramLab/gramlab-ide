<project name="integrated-ide" default="dist" basedir=".">

	<description> Integrated IDE build file</description>

	<!-- set global properties for this build -->
	<property name="plugins" location="core-plugins" />
	<property name="api" location="api" />
	<property name="api-src" location="api/src" />
	<property name="src" location="core/src" />
	<property name="build" location="build" />
	<property name="classes" location="classes" />
	<property name="dist" location="dist" />
	<property name="lib" location="lib" />
	<property name="resources" location="${src}/main/resources" />
	<property name="dist-lib" location="${dist}/lib" />
	<property name="dist-plugins" location="${dist}/plugins" />
	<property environment="env" />

	<!-- targets -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>

	<target name="clean" description="clean up">
		<!-- Clean core-plugins -->
		<subant target="clean" failonerror="false">
			<fileset dir="${plugins}">
				<include name="**/build.xml" />
				<exclude name="build.xml" />
			</fileset>
		</subant>

		<!-- Clean api -->
		<subant target="clean" failonerror="false">
			<fileset dir="api" includes="build.xml"/>
		</subant>

		<echo message="Deleting files in ${build}" level="info" />
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${build}" includes="**/*" />
		</delete>
		<delete dir="${build}" />

		<echo message="Deleting files in ${classes}" level="info" />
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${classes}" includes="**/*" />
		</delete>
		<delete dir="${classes}" />

		<echo message="Deleting files in ${dist}" level="info" />
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${dist}" includes="**/*" />
		</delete>
		<delete dir="${dist}" />
	</target>

	<target name="compile" depends="init" description="compile the source">
		<javac target="1.7" source="1.7" destdir="${build}" debug="true" includeAntRuntime="false">
			<compilerarg value="-Xlint:-options"/>
			<src path="${src}"/>
			<src path="${api-src}"/>
			<classpath>
				<fileset dir="${lib}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
		<!-- Compile api -->
		<subant target="build" failonerror="false">
			<fileset dir="api" includes="build.xml" />
		</subant>
		<!-- Compile core-plugins -->
		<subant target="build" failonerror="false">
			<fileset dir="${plugins}">
				<include name="**/build.xml" />
				<exclude name="build.xml" />
			</fileset>
		</subant>
	</target>

	<target name="dist" depends="compile" description="generate the distribution">

		<mkdir dir="${classes}" />
		<copy todir="${classes}">
			<fileset dir="core/src/main/resources" />
		</copy>
		<copy todir="${classes}">
			<fileset dir="${build}" />
		</copy>

		<!-- Create the distribution directory -->
		<mkdir dir="${dist}" />
		<!-- create Gramlab.jar -->
		<jar jarfile="${dist}/Gramlab.jar" manifest="${classes}/org/gramlab/core/gramlab/Manifest.mf" basedir="${classes}" />

		<!-- dist/*.ico -->
		<copy todir="${dist}">
			<fileset dir="${resources}">
				<include name="*.ico" />
			</fileset>
		</copy>

		<!-- dist/lib -->
		<mkdir dir="${dist-lib}" />
		<copy todir="${dist-lib}">
			<fileset dir="${lib}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<!-- dist/plugins -->
		<mkdir dir="${dist-plugins}" />
		<copy file="${plugins}/enabled.txt"  todir="${dist-plugins}"/>
		<copy file="${plugins}/disabled.txt" todir="${dist-plugins}"/>
		<copy todir="${dist-plugins}" flatten="true">
			<fileset dir="${plugins}">
				<include name="**/build/target/**.zip" />
			</fileset>
		</copy>
	</target>

	<target name="install-init">
		<fail unless="env.UNITEX_BUILD_RELEASE_DIR" message="UNITEX_BUILD_RELEASE_DIR is not set. try `export UNITEX_BUILD_RELEASE_DIR=.`"/>
		<property name="unitexHome" value="${env.UNITEX_BUILD_RELEASE_DIR}"/>
		<property name="app" location="${unitexHome}/App" />
		<property name="app-lib" location="${unitexHome}/App/lib" />
		<property name="app-plugins" location="${unitexHome}/App/plugins" />
	</target>

	<target name="install" depends="install-init,dist">
		<copy todir="${app}">
			<fileset dir="${dist}" />
		</copy>
		<copy todir="${app-lib}">
			<fileset dir="${dist-lib}">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy todir="${app-plugins}">
			<fileset dir="${dist-plugins}">
				<include name="*.*" />
			</fileset>
		</copy>
	</target>
</project>
